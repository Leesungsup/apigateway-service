server:
  port: 8000

#eureka:
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/gcu?serverTimezone=Asia/Seoul
    username: root
    password: test1234

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
  application:
    name: apigateway-service
  cloud:
    gateway:
#      default-filters:
#        - name: GlobalFilter
#          args:
#            baseMessage: Spring Cloud Gateway Global Filter
#            preLogger: true
#            postLogger: true
      routes:
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/**
        - id: survey-analyze
          uri: http://localhost:8084/
          predicates:
            - Path=/analyze/**
            - Method=GET,POST
          filters:
#            - AuthorizationHeaderFilter
        - id: survey-answer
          uri: http://localhost:8083/
          predicates:
            - Path=/survey/**
            - Method=GET,POST
          filters:
#            - CustomFilter
        - id: surveydocument
          uri: http://localhost:8082/
          predicates:
            - Path=/api/**
            - Method=GET,POST
          filters:
#            - AddRequestHeader=first-request, first-request-header2
#            - AddResponseHeader=first-response, first-response-header2
#            - CustomFilter
#            - AuthorizationHeaderFilter
        - id: first-service
          uri: http://localhost:8081/
          predicates:
            - Path=/first-service/**
            - Method=GET,POST
          filters:
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2
            - name: CustomFilter
#            - name: LoggingFilter
            - name: AuthorizationHeaderFilter
              args:
                baseMessage: Hi, there
                preLogger: true
                postLogger: true


management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httptrace

token:
  expiration-time: 86400000 # 하루짜리 토큰 생성
  secret: changhwan2022changhwanchanghwan2022changhwanchanghwan2022changhwanchanghwan2022changhwanchanghwan2022changhwan
